generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

model User {
  id         String     @id @default(cuid())
  email      String     @unique
  firstName  String?
  lastName   String?
  password   String
  role       Role       @default(USER)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  favorites  Favorite[]
  cartItems  CartItem[]
  ratings    Rating[]


  @@map("users")
}

model Category {
  id            String         @id @default(cuid())
  name          String         @unique
  products      Product[]
  subcategories Subcategory[]  

}

model Subcategory {
  id         String    @id @default(cuid())
  name       String
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])

  @@map("subcategories")
}


model Product {
  id            String     @id @default(cuid())
  name          String
  description   String?
  inventory     Int
  itemsSold     Int        @default(0)

  price         Json
  images        Json
  aspects       Json

  categoryId    String
  category      Category   @relation(fields: [categoryId], references: [id])

  favorites     Favorite[]
  cartItems     CartItem[]
  ratings       Rating[]

  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("products")
}


model Favorite {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  createdAt  DateTime @default(now())

  @@unique([userId, productId])
  @@map("favorites")
}

model CartItem {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  quantity   Int      @default(1)

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([userId, productId])
  @@map("cart_items")
}

model Rating{
  id String @id @default(cuid())

  user User @relation(fields: [userId], references: [id])
  userId String

  product Product @relation(fields: [productId], references: [id])
  productId String

  rate Int
  comment String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ratings")
  @@unique([userId, productId])
}
